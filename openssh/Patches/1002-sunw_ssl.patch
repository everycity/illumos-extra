diff --git a/configure.ac b/configure.ac
index bb2dfa2..18da280 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2329,8 +2329,8 @@ AC_ARG_WITH([ssl-engine],
 )
 
 if test "x$openssl" = "xyes" ; then
-	LIBS="-lcrypto $LIBS"
-	AC_TRY_LINK_FUNC([RAND_add], [AC_DEFINE([HAVE_OPENSSL], [1],
+	LIBS="-lsunw_crypto $LIBS"
+	AC_TRY_LINK_FUNC([sunw_RAND_add], [AC_DEFINE([HAVE_OPENSSL], [1],
 		[Define if your ssl headers are included
 		with #include <openssl/header.h>])],
 		[
@@ -2343,7 +2343,7 @@ if test "x$openssl" = "xyes" ; then
 			CPPFLAGS="-I/usr/local/ssl/include ${saved_CPPFLAGS}"
 			AC_CHECK_HEADER([openssl/opensslv.h], ,
 			    [AC_MSG_ERROR([*** OpenSSL headers missing - please install first or check config.log ***])])
-			AC_TRY_LINK_FUNC([RAND_add], [AC_DEFINE([HAVE_OPENSSL])],
+			AC_TRY_LINK_FUNC([sunw_RAND_add], [AC_DEFINE([HAVE_OPENSSL])],
 				[
 					AC_MSG_ERROR([*** Can't find recent OpenSSL libcrypto (see config.log for details) ***])
 				]
@@ -2487,16 +2487,16 @@ if test "x$openssl" = "xyes" ; then
 	)
 
 	AC_CHECK_FUNCS([ \
-		BN_is_prime_ex \
-		DSA_generate_parameters_ex \
-		EVP_DigestInit_ex \
-		EVP_DigestFinal_ex \
-		EVP_MD_CTX_init \
-		EVP_MD_CTX_cleanup \
-		EVP_MD_CTX_copy_ex \
-		HMAC_CTX_init \
-		RSA_generate_key_ex \
-		RSA_get_default_method \
+		sunw_BN_is_prime_ex \
+		sunw_DSA_generate_parameters_ex \
+		sunw_EVP_DigestInit_ex \
+		sunw_EVP_DigestFinal_ex \
+		sunw_EVP_MD_CTX_init \
+		sunw_EVP_MD_CTX_cleanup \
+		sunw_EVP_MD_CTX_copy_ex \
+		sunw_HMAC_CTX_init \
+		sunw_RSA_generate_key_ex \
+		sunw_RSA_get_default_method \
 	])
 
 	if test "x$openssl_engine" = "xyes" ; then
@@ -2581,8 +2581,8 @@ if test "x$openssl" = "xyes" ; then
 		]
 	)
 
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_ctrl], [crypto],
-		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_CTRL], [1],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_ctrl], [sunw_crypto],
+		[AC_DEFINE([HAVE_SUNW_EVP_CIPHER_CTX_CTRL], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_ctrl])])
 
 	AC_MSG_CHECKING([if EVP_DigestUpdate returns an int])
@@ -2618,7 +2618,7 @@ if test "x$openssl" = "xyes" ; then
 	AC_CHECK_FUNCS([crypt DES_crypt])
 
 	# Search for SHA256 support in libc and/or OpenSSL
-	AC_CHECK_FUNCS([SHA256_Update EVP_sha256], ,
+	AC_CHECK_FUNCS([sunw_SHA256_Update sunw_EVP_sha256], ,
 	    [unsupported_algorithms="$unsupported_algorithms \
 		hmac-sha2-256 hmac-sha2-512 \
 		diffie-hellman-group-exchange-sha256 \
@@ -2626,7 +2626,7 @@ if test "x$openssl" = "xyes" ; then
 	     ]
 	)
 	# Search for RIPE-MD support in OpenSSL
-	AC_CHECK_FUNCS([EVP_ripemd160], ,
+	AC_CHECK_FUNCS([sunw_EVP_ripemd160], ,
 	    [unsupported_algorithms="$unsupported_algorithms \
 		hmac-ripemd160
 		hmac-ripemd160@openssh.com
diff --git a/digest-openssl.c b/digest-openssl.c
index 13b63c2..c6fe9f9 100644
--- a/digest-openssl.c
+++ b/digest-openssl.c
@@ -32,14 +32,14 @@
 #include "digest.h"
 #include "ssherr.h"
 
-#ifndef HAVE_EVP_RIPEMD160
+#ifndef HAVE_SUNW_EVP_RIPEMD160
 # define EVP_ripemd160 NULL
-#endif /* HAVE_EVP_RIPEMD160 */
-#ifndef HAVE_EVP_SHA256
+#endif /* HAVE_SUNW_EVP_RIPEMD160 */
+#ifndef HAVE_SUNW_EVP_SHA256
 # define EVP_sha256 NULL
 # define EVP_sha384 NULL
 # define EVP_sha512 NULL
-#endif /* HAVE_EVP_SHA256 */
+#endif /* HAVE_SUNW_EVP_SHA256 */
 
 struct ssh_digest_ctx {
 	int alg;
diff --git a/kex.c b/kex.c
index 2683b11..f3ed41b 100644
--- a/kex.c
+++ b/kex.c
@@ -60,7 +60,7 @@
 #endif
 
 #if OPENSSL_VERSION_NUMBER >= 0x00907000L
-# if defined(HAVE_EVP_SHA256)
+# if defined(HAVE_SUNW_EVP_SHA256)
 # define evp_ssh_sha256 EVP_sha256
 # else
 extern const EVP_MD *evp_ssh_sha256(void);
@@ -82,9 +82,9 @@ static const struct kexalg kexalgs[] = {
 	{ KEX_DH1, KEX_DH_GRP1_SHA1, 0, SSH_DIGEST_SHA1 },
 	{ KEX_DH14, KEX_DH_GRP14_SHA1, 0, SSH_DIGEST_SHA1 },
 	{ KEX_DHGEX_SHA1, KEX_DH_GEX_SHA1, 0, SSH_DIGEST_SHA1 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ KEX_DHGEX_SHA256, KEX_DH_GEX_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif /* HAVE_EVP_SHA256 */
+#endif /* HAVE_SUNW_EVP_SHA256 */
 #ifdef OPENSSL_HAS_ECC
 	{ KEX_ECDH_SHA2_NISTP256, KEX_ECDH_SHA2,
 	    NID_X9_62_prime256v1, SSH_DIGEST_SHA256 },
@@ -96,9 +96,9 @@ static const struct kexalg kexalgs[] = {
 # endif /* OPENSSL_HAS_NISTP521 */
 #endif /* OPENSSL_HAS_ECC */
 #endif /* WITH_OPENSSL */
-#if defined(HAVE_EVP_SHA256) || !defined(WITH_OPENSSL)
+#if defined(HAVE_SUNW_EVP_SHA256) || !defined(WITH_OPENSSL)
 	{ KEX_CURVE25519_SHA256, KEX_C25519_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif /* HAVE_EVP_SHA256 || !WITH_OPENSSL */
+#endif /* HAVE_SUNW_EVP_SHA256 || !WITH_OPENSSL */
 #ifdef GSSAPI
 	{ KEX_GSS_GEX_SHA1_ID, KEX_GSS_GEX_SHA1, 0, SSH_DIGEST_SHA1 },
 	{ KEX_GSS_GRP1_SHA1_ID, KEX_GSS_GRP1_SHA1, 0, SSH_DIGEST_SHA1 },
diff --git a/mac.c b/mac.c
index f63fbff..02d872a 100644
--- a/mac.c
+++ b/mac.c
@@ -58,7 +58,7 @@ static const struct macalg macs[] = {
 	/* Encrypt-and-MAC (encrypt-and-authenticate) variants */
 	{ "hmac-sha1",				SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 0 },
 	{ "hmac-sha1-96",			SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 0 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ "hmac-sha2-256",			SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 0 },
 	{ "hmac-sha2-512",			SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 0 },
 #endif
@@ -72,7 +72,7 @@ static const struct macalg macs[] = {
 	/* Encrypt-then-MAC variants */
 	{ "hmac-sha1-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 1 },
 	{ "hmac-sha1-96-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 1 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ "hmac-sha2-256-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 1 },
 	{ "hmac-sha2-512-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 1 },
 #endif
diff --git a/md-sha256.c b/md-sha256.c
index 8c1b3b9..40c2dc8 100644
--- a/md-sha256.c
+++ b/md-sha256.c
@@ -22,7 +22,7 @@
 #include <sys/types.h>
 #include <openssl/opensslv.h>
 
-#if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
+#if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
 
 #include <string.h>
 #include <openssl/evp.h>
@@ -82,5 +82,5 @@ evp_ssh_sha256(void)
 	return (&ssh_sha256);
 }
 
-#endif /* !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L) */
+#endif /* !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L) */
 
diff --git a/myproposal.h b/myproposal.h
index 46e5b98..49e93e4 100644
--- a/myproposal.h
+++ b/myproposal.h
@@ -66,7 +66,7 @@
 # define AESGCM_CIPHER_MODES
 #endif
 
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 # define KEX_SHA256_METHODS \
 	"diffie-hellman-group-exchange-sha256,"
 #define	SHA2_HMAC_MODES \
@@ -78,7 +78,7 @@
 #endif
 
 #ifdef WITH_OPENSSL
-# ifdef HAVE_EVP_SHA256
+# ifdef HAVE_SUNW_EVP_SHA256
 #  define KEX_CURVE25519_METHODS "curve25519-sha256@libssh.org,"
 # else
 #  define KEX_CURVE25519_METHODS ""
diff --git a/openbsd-compat/openssl-compat.h b/openbsd-compat/openssl-compat.h
index 8917551..f658d6a 100644
--- a/openbsd-compat/openssl-compat.h
+++ b/openbsd-compat/openssl-compat.h
@@ -63,7 +63,7 @@ void ssh_aes_ctr_iv(EVP_CIPHER_CTX *, int, u_char *, size_t);
 #endif
 
 /* Replace missing EVP_CIPHER_CTX_ctrl() with something that returns failure */
-#ifndef HAVE_EVP_CIPHER_CTX_CTRL
+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_CTRL
 # ifdef OPENSSL_HAVE_EVPGCM
 #  error AES-GCM enabled without EVP_CIPHER_CTX_ctrl /* shouldn't happen */
 # else
diff --git a/openbsd-compat/sha2.c b/openbsd-compat/sha2.c
index 737935d..0f5c84c 100644
--- a/openbsd-compat/sha2.c
+++ b/openbsd-compat/sha2.c
@@ -40,7 +40,7 @@
 
 #ifdef WITH_OPENSSL
 # include <openssl/opensslv.h>
-# if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
+# if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
 #  define _NEED_SHA2 1
 # endif
 #else
diff --git a/openbsd-compat/sha2.h b/openbsd-compat/sha2.h
index c8bfc3c..a802d40 100644
--- a/openbsd-compat/sha2.h
+++ b/openbsd-compat/sha2.h
@@ -43,7 +43,7 @@
 
 #ifdef WITH_OPENSSL
 # include <openssl/opensslv.h>
-# if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
+# if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
 #  define _NEED_SHA2 1
 # endif
 #else
